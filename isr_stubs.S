# isr_stubs.S
# adapted from SP2 project at RIT

# usr a macro like SP2 to preserve sanity

	.text

/*
** _isr_table holds 32-bit pointers, so use 4 as a scale
*/
	.global	_isr_table
	.global isr_restore

#define ISR(vector)				  \
	.globl _isr_##vector			; \
_isr_##vector:					; \
	push	$0				; \
	push	$vector				; \
	jmp	isr_entry


#define ERR_ISR(vector)     \
        .globl _isr_##vector                    ; \
_isr_##vector:                                  ; \
        push    $vector                         ; \
        pusha                                   ; \
	jmp	isr_entry


isr_entry:
	pusha
        pushl   %ds
        pushl   %es
        pushl   %fs
        pushl   %gs
        pushl   %ss


	/*
	** Stack contents (all 32-bit longwords) and offsets from ESP:
	**
	**   SS GS FS ES DS EDI ESI EBP ESP EBX EDX ECX EAX vec cod 
	**   0  4  8  12 16 20  24  28  32  36  40  44  48  52  56  
	*/ 
	.global	current_proc

	movl	current_proc, %ebx		// save the context pointer
	movl	%esp, (%ebx)

	# DEBUG: print esp
	#pushl	%esp
	#pushl	$fmt
	#call	c_printf
	#addl	$8, %esp

	movl	52(%esp), %eax 			// save vector
	movl	56(%esp), %ebx  		// save code
	push	%ebx				
	push	%eax


	movl	_isr_table(,%eax,4), %ebx 	// call the ISR
	call	*%ebx
	addl	$8, %esp			// pop the args


isr_restore:
        /* restore the context */
	movl	current_proc, %ebx
	movl	(%ebx), %esp		// the context pointer of the current pcb

        # temp debugging code
	pushl	$fmt
	call	c_printf
	addl	$4, %esp
	#jmp	.

        popl	%ss
        popl	%gs
        popl	%fs
        popl	%es
        popl	%ds
	popa
	addl	$8, %esp
	iret

#fmt:	.string "ISR esp: 0x%x\n"
fmt:	.ascii	"\nss=%x  gs=%x  fs=%x  es=%x  ds=%x\n"
	.ascii	"edi=%x esi=%x ebp=%x esp=%x ebx=%x\n"
	.ascii	"edx=%x ecx=%x eax=%x vec=%x cod=%x\n"
	.string	"eip=%x  cs=%x efl=%x\n"

# the actual stubs
ISR(0x00);      ISR(0x01);      ISR(0x02);      ISR(0x03);
ISR(0x04);      ISR(0x05);      ISR(0x06);      ISR(0x07);
ERR_ISR(0x08);  ISR(0x09);      ERR_ISR(0x0a);  ERR_ISR(0x0b);
ERR_ISR(0x0c);  ERR_ISR(0x0d);  ERR_ISR(0x0e);  ISR(0x0f);
ISR(0x10);      ERR_ISR(0x11);  ISR(0x12);      ISR(0x13);
ISR(0x14);      ISR(0x15);      ISR(0x16);      ISR(0x17);
ISR(0x18);      ISR(0x19);      ISR(0x1a);      ISR(0x1b);
ISR(0x1c);      ISR(0x1d);      ISR(0x1e);      ISR(0x1f);
ISR(0x20);      ISR(0x21);      ISR(0x22);      ISR(0x23);
ISR(0x24);      ISR(0x25);      ISR(0x26);      ISR(0x27);
ISR(0x28);      ISR(0x29);      ISR(0x2a);      ISR(0x2b);
ISR(0x2c);      ISR(0x2d);      ISR(0x2e);      ISR(0x2f);
ISR(0x30);      ISR(0x31);      ISR(0x32);      ISR(0x33);
ISR(0x34);      ISR(0x35);      ISR(0x36);      ISR(0x37);
ISR(0x38);      ISR(0x39);      ISR(0x3a);      ISR(0x3b);
ISR(0x3c);      ISR(0x3d);      ISR(0x3e);      ISR(0x3f);
ISR(0x40);      ISR(0x41);      ISR(0x42);      ISR(0x43);
ISR(0x44);      ISR(0x45);      ISR(0x46);      ISR(0x47);
ISR(0x48);      ISR(0x49);      ISR(0x4a);      ISR(0x4b);
ISR(0x4c);      ISR(0x4d);      ISR(0x4e);      ISR(0x4f);
ISR(0x50);      ISR(0x51);      ISR(0x52);      ISR(0x53);
ISR(0x54);      ISR(0x55);      ISR(0x56);      ISR(0x57);
ISR(0x58);      ISR(0x59);      ISR(0x5a);      ISR(0x5b);
ISR(0x5c);      ISR(0x5d);      ISR(0x5e);      ISR(0x5f);
ISR(0x60);      ISR(0x61);      ISR(0x62);      ISR(0x63);
ISR(0x64);      ISR(0x65);      ISR(0x66);      ISR(0x67);
ISR(0x68);      ISR(0x69);      ISR(0x6a);      ISR(0x6b);
ISR(0x6c);      ISR(0x6d);      ISR(0x6e);      ISR(0x6f);
ISR(0x70);      ISR(0x71);      ISR(0x72);      ISR(0x73);
ISR(0x74);      ISR(0x75);      ISR(0x76);      ISR(0x77);
ISR(0x78);      ISR(0x79);      ISR(0x7a);      ISR(0x7b);
ISR(0x7c);      ISR(0x7d);      ISR(0x7e);      ISR(0x7f);
ISR(0x80);      ISR(0x81);      ISR(0x82);      ISR(0x83);
ISR(0x84);      ISR(0x85);      ISR(0x86);      ISR(0x87);
ISR(0x88);      ISR(0x89);      ISR(0x8a);      ISR(0x8b);
ISR(0x8c);      ISR(0x8d);      ISR(0x8e);      ISR(0x8f);
ISR(0x90);      ISR(0x91);      ISR(0x92);      ISR(0x93);
ISR(0x94);      ISR(0x95);      ISR(0x96);      ISR(0x97);
ISR(0x98);      ISR(0x99);      ISR(0x9a);      ISR(0x9b);
ISR(0x9c);      ISR(0x9d);      ISR(0x9e);      ISR(0x9f);
ISR(0xa0);      ISR(0xa1);      ISR(0xa2);      ISR(0xa3);
ISR(0xa4);      ISR(0xa5);      ISR(0xa6);      ISR(0xa7);
ISR(0xa8);      ISR(0xa9);      ISR(0xaa);      ISR(0xab);
ISR(0xac);      ISR(0xad);      ISR(0xae);      ISR(0xaf);
ISR(0xb0);      ISR(0xb1);      ISR(0xb2);      ISR(0xb3);
ISR(0xb4);      ISR(0xb5);      ISR(0xb6);      ISR(0xb7);
ISR(0xb8);      ISR(0xb9);      ISR(0xba);      ISR(0xbb);
ISR(0xbc);      ISR(0xbd);      ISR(0xbe);      ISR(0xbf);
ISR(0xc0);      ISR(0xc1);      ISR(0xc2);      ISR(0xc3);
ISR(0xc4);      ISR(0xc5);      ISR(0xc6);      ISR(0xc7);
ISR(0xc8);      ISR(0xc9);      ISR(0xca);      ISR(0xcb);
ISR(0xcc);      ISR(0xcd);      ISR(0xce);      ISR(0xcf);
ISR(0xd0);      ISR(0xd1);      ISR(0xd2);      ISR(0xd3);
ISR(0xd4);      ISR(0xd5);      ISR(0xd6);      ISR(0xd7);
ISR(0xd8);      ISR(0xd9);      ISR(0xda);      ISR(0xdb);
ISR(0xdc);      ISR(0xdd);      ISR(0xde);      ISR(0xdf);
ISR(0xe0);      ISR(0xe1);      ISR(0xe2);      ISR(0xe3);
ISR(0xe4);      ISR(0xe5);      ISR(0xe6);      ISR(0xe7);
ISR(0xe8);      ISR(0xe9);      ISR(0xea);      ISR(0xeb);
ISR(0xec);      ISR(0xed);      ISR(0xee);      ISR(0xef);
ISR(0xf0);      ISR(0xf1);      ISR(0xf2);      ISR(0xf3);
ISR(0xf4);      ISR(0xf5);      ISR(0xf6);      ISR(0xf7);
ISR(0xf8);      ISR(0xf9);      ISR(0xfa);      ISR(0xfb);
ISR(0xfc);      ISR(0xfd);      ISR(0xfe);      ISR(0xff);



# isr stub table contains addresses of the stubs
        .data

/*
** This table contains the addresses where each of the preceding
** stubs begins.  This information is needed to initialize the
** Interrupt Descriptor Table in support.c
*/
        .globl  _isr_stubs
_isr_stubs:
        .long   _isr_0x00, _isr_0x01, _isr_0x02, _isr_0x03
        .long   _isr_0x04, _isr_0x05, _isr_0x06, _isr_0x07
        .long   _isr_0x08, _isr_0x09, _isr_0x0a, _isr_0x0b
        .long   _isr_0x0c, _isr_0x0d, _isr_0x0e, _isr_0x0f
        .long   _isr_0x10, _isr_0x11, _isr_0x12, _isr_0x13
        .long   _isr_0x14, _isr_0x15, _isr_0x16, _isr_0x17
        .long   _isr_0x18, _isr_0x19, _isr_0x1a, _isr_0x1b
        .long   _isr_0x1c, _isr_0x1d, _isr_0x1e, _isr_0x1f
        .long   _isr_0x20, _isr_0x21, _isr_0x22, _isr_0x23
        .long   _isr_0x24, _isr_0x25, _isr_0x26, _isr_0x27
        .long   _isr_0x28, _isr_0x29, _isr_0x2a, _isr_0x2b
        .long   _isr_0x2c, _isr_0x2d, _isr_0x2e, _isr_0x2f
        .long   _isr_0x30, _isr_0x31, _isr_0x32, _isr_0x33
        .long   _isr_0x34, _isr_0x35, _isr_0x36, _isr_0x37
        .long   _isr_0x38, _isr_0x39, _isr_0x3a, _isr_0x3b
        .long   _isr_0x3c, _isr_0x3d, _isr_0x3e, _isr_0x3f
        .long   _isr_0x40, _isr_0x41, _isr_0x42, _isr_0x43
        .long   _isr_0x44, _isr_0x45, _isr_0x46, _isr_0x47
        .long   _isr_0x48, _isr_0x49, _isr_0x4a, _isr_0x4b
        .long   _isr_0x4c, _isr_0x4d, _isr_0x4e, _isr_0x4f
        .long   _isr_0x50, _isr_0x51, _isr_0x52, _isr_0x53
        .long   _isr_0x54, _isr_0x55, _isr_0x56, _isr_0x57
        .long   _isr_0x58, _isr_0x59, _isr_0x5a, _isr_0x5b
        .long   _isr_0x5c, _isr_0x5d, _isr_0x5e, _isr_0x5f
        .long   _isr_0x60, _isr_0x61, _isr_0x62, _isr_0x63
        .long   _isr_0x64, _isr_0x65, _isr_0x66, _isr_0x67
        .long   _isr_0x68, _isr_0x69, _isr_0x6a, _isr_0x6b
        .long   _isr_0x6c, _isr_0x6d, _isr_0x6e, _isr_0x6f
        .long   _isr_0x70, _isr_0x71, _isr_0x72, _isr_0x73
        .long   _isr_0x74, _isr_0x75, _isr_0x76, _isr_0x77
        .long   _isr_0x78, _isr_0x79, _isr_0x7a, _isr_0x7b
        .long   _isr_0x7c, _isr_0x7d, _isr_0x7e, _isr_0x7f
        .long   _isr_0x80, _isr_0x81, _isr_0x82, _isr_0x83
        .long   _isr_0x84, _isr_0x85, _isr_0x86, _isr_0x87
        .long   _isr_0x88, _isr_0x89, _isr_0x8a, _isr_0x8b
        .long   _isr_0x8c, _isr_0x8d, _isr_0x8e, _isr_0x8f
        .long   _isr_0x90, _isr_0x91, _isr_0x92, _isr_0x93
        .long   _isr_0x94, _isr_0x95, _isr_0x96, _isr_0x97
        .long   _isr_0x98, _isr_0x99, _isr_0x9a, _isr_0x9b
        .long   _isr_0x9c, _isr_0x9d, _isr_0x9e, _isr_0x9f
        .long   _isr_0xa0, _isr_0xa1, _isr_0xa2, _isr_0xa3
        .long   _isr_0xa4, _isr_0xa5, _isr_0xa6, _isr_0xa7
        .long   _isr_0xa8, _isr_0xa9, _isr_0xaa, _isr_0xab
        .long   _isr_0xac, _isr_0xad, _isr_0xae, _isr_0xaf
        .long   _isr_0xb0, _isr_0xb1, _isr_0xb2, _isr_0xb3
        .long   _isr_0xb4, _isr_0xb5, _isr_0xb6, _isr_0xb7
        .long   _isr_0xb8, _isr_0xb9, _isr_0xba, _isr_0xbb
        .long   _isr_0xbc, _isr_0xbd, _isr_0xbe, _isr_0xbf
        .long   _isr_0xc0, _isr_0xc1, _isr_0xc2, _isr_0xc3
        .long   _isr_0xc4, _isr_0xc5, _isr_0xc6, _isr_0xc7
        .long   _isr_0xc8, _isr_0xc9, _isr_0xca, _isr_0xcb
        .long   _isr_0xcc, _isr_0xcd, _isr_0xce, _isr_0xcf
        .long   _isr_0xd0, _isr_0xd1, _isr_0xd2, _isr_0xd3
        .long   _isr_0xd4, _isr_0xd5, _isr_0xd6, _isr_0xd7
        .long   _isr_0xd8, _isr_0xd9, _isr_0xda, _isr_0xdb
        .long   _isr_0xdc, _isr_0xdd, _isr_0xde, _isr_0xdf
        .long   _isr_0xe0, _isr_0xe1, _isr_0xe2, _isr_0xe3
        .long   _isr_0xe4, _isr_0xe5, _isr_0xe6, _isr_0xe7
        .long   _isr_0xe8, _isr_0xe9, _isr_0xea, _isr_0xeb
        .long   _isr_0xec, _isr_0xed, _isr_0xee, _isr_0xef
        .long   _isr_0xf0, _isr_0xf1, _isr_0xf2, _isr_0xf3
        .long   _isr_0xf4, _isr_0xf5, _isr_0xf6, _isr_0xf7
        .long   _isr_0xf8, _isr_0xf9, _isr_0xfa, _isr_0xfb
        .long   _isr_0xfc, _isr_0xfd, _isr_0xfe, _isr_0xff
